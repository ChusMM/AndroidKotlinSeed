apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.example.androidkotlinseed"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.example.androidkotlinseed.MockRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
        multiDexEnabled true
    }

    buildTypes {
        debug {
            jniDebuggable true
            debuggable true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "environment"
    productFlavors {
        def dataWebService = "\"WS\""
        def dataMock = "\"MOCK\""

        mock {
            dimension "environment"
            buildConfigField "String", "DATA_SOURCE", dataMock
            manifestPlaceholders = [usesCleartextTraffic: "true"]
            buildConfigField "String", "API_BASE_URL", "\"http://localhost:8080\""
            applicationIdSuffix ".mock"
        }

        pre {
            dimension "environment"
            buildConfigField "String", "DATA_SOURCE", dataWebService
            manifestPlaceholders = [usesCleartextTraffic: "true"]
            buildConfigField "String", "API_BASE_URL", "\"https://api.myjson.com\""
            applicationIdSuffix ".pre"
        }

        pro {
            dimension "environment"
            buildConfigField "String", "DATA_SOURCE", dataWebService
            manifestPlaceholders = [usesCleartextTraffic: "false"]
            buildConfigField "String", "API_BASE_URL", "\"https://api.myjson.com\""
        }
    }

    sourceSets {
        mock.java.srcDirs "src/main/java", "src/mock/java"
        pre.java.srcDirs "src/main/java", "src/ws/java"
        pre.manifest.srcFile "src/ws/AndroidManifest.xml"
        pre.res.srcDirs "src/main/res", "src/ws/res"
        pro.java.srcDirs "src/main/java", "src/ws/java"
        pro.manifest.srcFile "src/ws/AndroidManifest.xml"
        pre.res.srcDirs "src/main/res", "src/ws/res"
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }


    kapt {
        correctErrorTypes = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.activity:activity-ktx:1.1.0"

    // Viewmodel
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // retrofit + gson
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    // OkHttp
    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // Room
    def room_version = "2.2.6"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // ReactiveX
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    //Photo Viewer
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    //Easy Permissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    //Mock web server
    implementation 'com.squareup.okhttp3:mockwebserver:4.9.0'

    // EventBus
    implementation 'org.greenrobot:eventbus:3.2.0'

    // Unit test dependencies
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.powermock:powermock-core:2.0.2'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.2'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    testImplementation "com.google.truth:truth:0.36"
    testImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.28-alpha'

    // UX test dependencies
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.28-alpha'
}
